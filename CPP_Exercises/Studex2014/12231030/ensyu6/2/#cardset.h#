//
// cardset.h - ’¥È’¥é’¥ó’¥×’¥«’¡¼’¥É’¤Î’½¸’¹ç’·¿(C++’ÈÇ)
//	’ºî’¼Ô: (’¤¢’¤Ê’¤¿’¤Î’Ì¾’Á°); ’Æü’ÉÕ: (’´°’À®’¤·’¤¿’Æü’ÉÕ)
//
#ifndef CARDSET_H
#define CARDSET_H

//
// Card - ’¥È’¥é’¥ó’¥×’¥«’¡¼’¥É’·¿
//
class Card {
	// ’¥¯’¥é’¥¹’Äê’¿ô
	// ’¥È’¥é’¥ó’¥×’¤Î’ÁÈ(suit)’¤Î’¥³’¡¼’¥É
	public:
	enum {
		SUIT_SPADE,
		SUIT_DIAMOND,
		SUIT_HEART,
		SUIT_CLUB,
		SUIT_JOKER,
		SUIT_NUMBER
	};
	
// ’¥á’¥ó’¥Ð’ÊÑ’¿ô
private:
	int suit;	// ’ÁÈ
	int number;	// ’ÈÖ’¹æ
// ’¥á’¥ó’¥Ð’´Ø’¿ô
public:
	// ’¥Ç’¥Õ’¥©’¥ë’¥È’¥³’¥ó’¥¹’¥È’¥é’¥¯’¥¿(’½é’´ü’ÃÍ’ÉÔ’Äê)
	Card(void)	{ }
	// ’ÁÈ’¤È’ÈÖ’¹æ’¤ò’Àß’Äê’¤¹’¤ë
	void set(int st, int num) {
		suit = st;
		number = num; 
	}

	// ’¼«’¿È’¤È tgt ’¤Î’¥«’¡¼’¥É’¤Î’ÁÈ’¡¤’ÈÖ’¹æ’¤¬’Åù’¤·’¤¤’¤«’È½’Äê (true: ’Æ±; false: ’°Û)
	// ’¥Ç’¡¼’¥¿’¤È’¤·’¤Æ’Æ±’¤¸’¥ª’¥Ö’¥¸’¥§’¥¯’¥È’¤«’¤É’¤¦’¤«’¤Ç’¤Ï’¤Ê’¤¤’¡¥
	bool equal(Card tgt) { 
		return (suit == tgt.suit) && (number == tgt.number); 
	}

	bool isValid() {
		if ( ((SUIT_SPADE <= suit) && (suit <= SUIT_CLUB)) 
			 && (1 <= number && (number <= 13)) )
			return true;
		else if (suit == SUIT_JOKER)
			return true;
		return false;
	}
	
	// ’¥¢’¥¯’¥»’¥µ
	int gnumber(void) {
		return number;
	}
	
	int gsuit(void)	{
		return suit;
	}

	// ’É¸’½à’½Ð’ÎÏ’¤«’¤é’¼«’¿È’¤Ë’Æþ’ÎÏ’¤¹’¤ë(true: ’¥¨’¥é’¡¼; false: ’Àµ’¾ï’½ª’Î»)
	bool scan(void);
	
	
	// ’¼«’¿È’¤Î’ÃÍ’¤ò’É¸’½à’½Ð’ÎÏ’¤Ë’½Ð’ÎÏ’¤¹’¤ë
	void print(void);
	
};

//
// CardSet - ’¥È’¥é’¥ó’¥×’¥«’¡¼’¥É’¤Î’½¸’¹ç’·¿
//
class CardSet {
// ’Äê’µÁ’¡¦’Àë’¸À
public:
	const static int maxnumcard = 53;	// ’¥«’¡¼’¥É’Áí’¿ô
// ’¥á’¥ó’¥Ð’ÊÑ’¿ô
private:
	int numcard;		// ’¸½’ºß’¤Î’½¸’¹ç’Æâ’¤Î’¥«’¡¼’¥É’¿ô
	Card cdat[maxnumcard];	// ’¥«’¡¼’¥É’¤Î’¥Ç’¡¼’¥¿
// ’¥á’¥ó’¥Ð’´Ø’¿ô
private:
	int locate(Card target);
		// ’Æâ’Éô’¤Ç’¤Î target ’¤Î’¥«’¡¼’¥É’¤Î’°Ì’ÃÖ’¤ò’ÊÖ’¤¹(-1: ’¤Ê’¤¤)
	int locate(int num);
		// ’Æâ’Éô’¤Ç’¿ô’»ú’¤¬ num ’¤Î’¥«’¡¼’¥É’¤Î’°Ì’ÃÖ’¤ò’ÊÖ’¤¹(-1: ’¤Ê’¤¤)
public:
	CardSet(void)		{ makeempty(); }
		// ’¥Ç’¥Õ’¥©’¥ë’¥È’¥³’¥ó’¥¹’¥È’¥é’¥¯’¥¿(’½é’´ü’ÃÍ’¶õ’½¸’¹ç)
	void makeempty(void)	{ numcard = 0 ; }
		// ’¼«’¿È’¤ò’¶õ’½¸’¹ç’¤Ë’¤¹’¤ë
	bool isempty(void)	{ return numcard == 0; }
		// ’¼«’¿È’¤¬’¶õ’½¸’¹ç’¤«’ÈÝ’¤«’¤Î’È½’Äê (true: ’¶õ; false: ’Èó’¶õ)
	void makedeck(void);
		// ’¼«’¿È’¤Ë’Á´’Éô’¤Î(maxnumcard ’Ëç’¤Î)’¥«’¡¼’¥É’¤ò’Æþ’¤ì’¤ë
	bool pickup(Card* ret, int targetpos = -1);
		// ’¼«’¿È’¤«’¤é targetpos ’Ëç’ÌÜ’¤Î’¥«’¡¼’¥É’¤ò’½ü’¤­ *ret ’¤Ë’ÊÖ’¤¹
		// targetpos ’¤¬ -1 ’¤Î’¤È’¤­’¤Ï’¥é’¥ó’¥À’¥à’¤Ë’Áª’¤Ö
		// (true: ’¼º’ÇÔ; false: ’À®’¸ù)
	bool insert(Card newcard);
		// ’¼«’¿È’¤Ë newcard ’¤Î’¥«’¡¼’¥É’¤ò’Æþ’¤ì’¤ë(true: ’¼º’ÇÔ; false: ’À®’¸ù)
	bool remove(Card target);
		// ’¼«’¿È’¤«’¤é target ’¤Î’¥«’¡¼’¥É’¤ò’½ü’¤¯(true: ’¼º’ÇÔ; false: ’À®’¸ù)
	bool remove(int num);
		// ’¼«’¿È’¤«’¤é’¿ô’»ú’¤¬ num ’¤Ç’¤¢’¤ë’¥«’¡¼’¥É’¤ò’½ü’¤¯(true: ’¼º’ÇÔ; false: ’À®’¸ù)
	void print(void);
		// ’¼«’¿È’¤Î’¾õ’ÂÖ’¤ò’É¸’½à’½Ð’ÎÏ’¤Ë’½Ð’ÎÏ’¤¹’¤ë
		
};

#endif
